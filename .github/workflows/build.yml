name: Build Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-native:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --release --verbose
      - run: cargo test --verbose
      - name: Upload native Linux (for debugging)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: xlsx-trimmer-linux-host
          path: target/release/xlsx-trimmer
      - name: Upload Windows exe
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: xlsx-trimmer-windows
          path: target/release/xlsx-trimmer.exe

  build-qnap-musl:
    name: Build QNAP (static MUSL)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl] # add armv7-unknown-linux-musleabihf if needed
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Set up Rust (targets)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Build static MUSL
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
        run: |
          cargo build --release --target ${{ matrix.target }} --verbose
          # Trim size (ignore if tool absent)
          sudo apt-get update && sudo apt-get install -y binutils || true
          strip target/${{ matrix.target }}/release/xlsx-trimmer || true
          chmod +x target/${{ matrix.target }}/release/xlsx-trimmer
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: xlsx-trimmer-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/xlsx-trimmer
